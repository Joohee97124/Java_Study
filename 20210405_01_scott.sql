SELECT USER
FROM DUAL;
--==>> SCOTT


--○ TBL_JUMUNBACKUP 테이블과 TBL_JUMUN 테이블에서
--   제품코드와 주문량이 똑같은 행의 정보를
--   주문번호, 제품코드, 주문수량, 주문일자 항목으로 조회한다.

-- 방법1.

SELECT JECODE, JUSU
FROM TBL_JUMUNBACKUP
INTERSECT
SELECT JECODE, JUSU
FROM TBL_JUMUN;
--==>> 
/*
꼬북칩	30
와클	    10
칸쵸	    20
포카칩	40
홈런볼	50
*/

SELECT JECODE, JUSU, JUNO, JUDAY
FROM TBL_JUMUNBACKUP
INTERSECT
SELECT JECODE, JUSU, JUNO, JUDAY
FROM TBL_JUMUN;
--==>> 조회 결과 없음
-->> 4 항목이 모두 같은 애들은 없음 (그것을 찾으라는 문제도 아님)

ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD HH24:MI:SS';
--==>> Session이(가) 변경되었습니다.

SELECT T2.JUNO "주문번호", T1.JECODE "제품코드", T1.JUSU "주문수량", T2.JUDAY "주문일자"
FROM
(
    SELECT JECODE, JUSU
    FROM TBL_JUMUNBACKUP
    INTERSECT
    SELECT JECODE, JUSU
    FROM TBL_JUMUN
) T1
JOIN 
(
    SELECT JECODE, JUSU, JUNO, JUDAY
    FROM TBL_JUMUNBACKUP
    UNION ALL
    SELECT JECODE, JUSU, JUNO, JUDAY
    FROM TBL_JUMUN
) T2
ON T1.JECODE = T2.JECODE 
AND T1.JUSU = T2.JUSU;
--==>>
/*
2	    와클  	10	2001-11-01 09:23:37
3	    꼬북칩	30	2001-11-01 11:41:00
5	    홈런볼	50	2001-11-03 15:50:00
8	    포카칩	40	2001-11-13 09:41:14
10	    칸쵸  	20	2001-11-20 14:17:00
938767	와클  	10	2021-04-01 14:31:09
938768	홈런볼	50	2021-04-01 14:31:11
938769	꼬북칩	30	2021-04-01 14:31:13
938772	포카칩	40	2021-04-01 14:31:20
938774	칸쵸	    20	2021-04-01 14:31:24
*/
-->> 교집합하여 찾고 필요한 정보의 애들과 조인


-- 방법2.
SELECT *
FROM
(
    SELECT JECODE, JUSU, JUNO, JUDAY
    FROM TBL_JUMUNBACKUP
    UNION ALL
    SELECT JECODE, JUSU, JUNO, JUDAY
    FROM TBL_JUMUN
) T
WHERE JECODE IN ('와클', '꼬북칩', '홈런볼', '포카칩', '칸쵸')
  AND JUSU IN (10, 30, 50, 40, 20);
-->> OR이라 () 안에있는

SELECT *
FROM
(
    SELECT JECODE, JUSU, JUNO, JUDAY
    FROM TBL_JUMUNBACKUP
    UNION ALL
    SELECT JECODE, JUSU, JUNO, JUDAY
    FROM TBL_JUMUN
) T
-- WHERE JECODE||JUSU IN ('와클10', '꼬북칩30', '홈런볼50', '포카칩40', '칸쵸20');
-- WHERE CONCAT(JECODE,JUSU) IN ('와클10', '꼬북칩30', '홈런볼50', '포카칩40', '칸쵸20');
WHERE CONCAT(JECODE,JUSU) =ANY ('와클10', '꼬북칩30', '홈런볼50', '포카칩40', '칸쵸20');

SELECT CONCAT(JECODE, JUSU)
FROM TBL_JUMUNBACKUP
INTERSECT
SELECT CONCAT(JECODE, JUSU)
FROM TBL_JUMUN;

SELECT *
FROM
(
    SELECT JECODE, JUSU, JUNO, JUDAY
    FROM TBL_JUMUNBACKUP
    UNION ALL
    SELECT JECODE, JUSU, JUNO, JUDAY
    FROM TBL_JUMUN
) T
WHERE CONCAT(JECODE,JUSU) =ANY (SELECT CONCAT(JECODE, JUSU)
                                FROM TBL_JUMUNBACKUP
                                INTERSECT
                                SELECT CONCAT(JECODE, JUSU)
                                FROM TBL_JUMUN
                                );
--==>>
/*
와클  	10	2	    2001-11-01 09:23:37
꼬북칩	30	3	    2001-11-01 11:41:00
홈런볼	50	5	    2001-11-03 15:50:00
포카칩	40	8	    2001-11-13 09:41:14
칸쵸  	20	10	    2001-11-20 14:17:00
와클  	10	938767	2021-04-01 14:31:09
홈런볼	50	938768	2021-04-01 14:31:11
꼬북칩	30	938769	2021-04-01 14:31:13
포카칩	40	938772	2021-04-01 14:31:20
칸쵸	    20	938774	2021-04-01 14:31:24
*/


-- MINUS : 차집합
SELECT JECODE, JUSU
FROM TBL_JUMUNBACKUP;
--==>>
/*
쫀득초코칩	20
와클	        10 V
꼬북칩	    30 V
칙촉      	12
홈런볼	    50 V
바나나킥    	40
눈을감자	    10
포카칩	    40 V
감자칩	    20
칸쵸	        20 V 
*/

SELECT JECODE, JUSU
FROM TBL_JUMUNBACKUP
INTERSECT
SELECT JECODE, JUSU
FROM TBL_JUMUN;
--==>>
/*
꼬북칩	30
와클	    10
칸쵸  	20
포카칩	40
홈런볼	50
*/

SELECT JECODE, JUSU
FROM TBL_JUMUNBACKUP
MINUS
SELECT JECODE, JUSU
FROM TBL_JUMUN;
--==>>
/*
감자칩	    20
눈을감자	    10
바나나킥	    40
쫀득초코칩	20
칙촉      	12
*/


/*
    A = {10, 20, 30, 40, 50}
    B = {10, 20, 30}
    
    A-B = {40,50}
*/


SELECT D.DEPTNO, D.DNAME, E.ENAME, E.SAL
FROM EMP E JOIN DEPT D
ON E.DEPTNO = D.DEPTNO;

-- CHECK~!!!
SELECT DEPTNO, DNAME, ENAME, SAL
FROM EMP NATURAL JOIN DEPT;
--==>>
/*
10	ACCOUNTING	CLARK	2450
10	ACCOUNTING	KING	5000
10	ACCOUNTING	MILLER	1300
20	RESEARCH	JONES	2975
20	RESEARCH	FORD	3000
20	RESEARCH	ADAMS	1100
20	RESEARCH	SMITH	800
20	RESEARCH	SCOTT	3000
30	SALES	    WARD	1250
30	SALES	    TURNER	1500
30	SALES	    ALLEN	1600
30	SALES	    JAMES	950
30	SALES	    BLAKE	2850
30	SALES	    MARTIN	1250
*/
-->> 자연스럽게 조인 = 오라클아 니가 알아서해줘 (추천은 안혀)

SELECT DEPTNO, DNAME, ENAME, SAL
FROM EMP JOIN DEPT
USING(DEPTNO);
-->> DEPTNO를 사용해서 얘네를 묶어주라는 의미 
--==>>>
/*
10	ACCOUNTING	CLARK	2450
10	ACCOUNTING	KING	5000
10	ACCOUNTING	MILLER	1300
20	RESEARCH	JONES	2975
20	RESEARCH	FORD	3000
20	RESEARCH	ADAMS	1100
20	RESEARCH	SMITH	800
20	RESEARCH	SCOTT	3000
30	SALES	    WARD	1250
30	SALES	    TURNER	1500
30	SALES	    ALLEN	1600
30	SALES	    JAMES	950
30	SALES	    BLAKE	2850
30	SALES	    MARTIN	1250
*/




