/*===========================================
■■■ 자바 기본 프로그래밍 ■■■
- 자바의 기본 입출력 : System.in.read()

// System상자 안에 in 상자 안에 read라는 메소드를 꺼내써
readLine() -- 읽어오는데 한줄 다 읽어와
read() -- 문자 하나만 읽어와
===========================================*/

/*
※ 『System.in.read()』 메소드는 한 문자만 가져온다.
	단, 하나의 문자를 입력받아 입력받은 문자의
	ASCII Code 값을 반환하게 된다.
*/

// 실행 예)
// 한 문자 입력 : G
// 한 자리 정수 입력 : 7

// >> 입력한 문자 : G
// >> 입력한 정수 : 7
// 계속하려면 아무 키나 누르세요...

import java.io.IOException;

public class Test015
{
	public static void main(String[] args) throws IOException
	{

		// ○ 주요 변수 선언	
		char ch;		//-- 입력받은 문자를 담을 변수
		int n;			//-- 압력받은 정수를 담을 변수

		// ○ 연산 및 처리
		// ·사용자에게 안내 메세지 출력
		System.out.print("한 문자 입력 : ");	// G->71

		// 한 문자 입력 : 'G' + 엔터 (= 문자를 입력 받으면 개행까지 같이 이루어짐)
		// 					    ------------------------
		//					     ← + ↓ ==>> \r + \n

		// ·사용자 입력 값을 문자형으로 변환한 후 변수 ch에 담아내기
		// ch = System.in.read();	-- 바로 ch로 받아올 수 없음 
		// int -> char로 자동형변환이 될 수 없기 떄문에 (G->71로 받아왔음)
		ch = (char)System.in.read();
		
		// ※ 입력 대기열에 남아있는 『\r 과 \n을 스킵 (건너뛰기, 버리기)
		System.in.skip(2);
		//-- 두 글자를 읽지 않고 건너뛴다. (= 버린다)

		
		// ·사용자에게 안내 메세지 출력
		System.out.print("한 자리 정수 입력 : ");
		
		// ·사용자 입력값을 변수 n 에 담아내기
		n = System.in.read();	// 정수 = 정수
								// 0 -> 48 (정수의 아스키코드 값)
								// 1 -> 49 
								// ..
								// 7 -> 55
								// ..
								// 9 -> 57
		// n을 48만큼 감소시켜라-!! (정수와 아스키코드 값의 차)
		n -= 48;  // 복합대입 연산자 사용
		

		// ○ 결과 출력
		System.out.println();
		System.out.println(">> 입력한 문자 : " +ch);
		System.out.println(">> 입력한 정수 : " +n);



	}
}

/* 
[실행 결과]
한 문자 입력 : G
한 자리 정수 입력 : 7

>> 입력한 문자 : G
>> 입력한 정수 : 7
계속하려면 아무 키나 누르십시오 . . .
*/